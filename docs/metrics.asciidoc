= Crunchy Containers
Crunchy Data Solutions, Inc.
v1.0.9, {docdate}
:title-logo-image: image:crunchy_logo.png["CrunchyData Logo",align="center",scaledwidth="80%"]

== Collected Metrics

== Description
Postgresql metrics are collected by the crunchy-collect container.  To
start collection of metrics on a Postgres database, you add the
crunchy-collect container into the pod that holds the crunchy-pg container.

=== Requirements
Metrics are stored in the crunchy-scope container.  crunchy-scope runs
the prometheus time series database, the prometheus pushgateway, and
the grafana web application.  An example of starting the crunchy-scope
container is in examples/openshift/scope.json.

To start the crunchy-scope container, run the following:
....
oc process -f scope.json | oc create -f -
....

The crunchy-scope data in this example is stored in emptyDir volume types.
To persist the data and grafana templates long term, you will want to
use NFS volume types as specified in examples/openshift/scope-nfs.json.

When running crunchy-scope, the following ports are available:
 * crunchy-scope:9090 - the prometheus web user interface
 * crunchy-scope:9091 - the prometheus pushgateway REST API
 * crunchy-scope:3000 - the grafana web user interface

=== crunchy-collect Environment Variables

 * POLL_INT - number of minutes to sleep until metrics are collected.  defaults to 15 minutes
 * PROM_GATEWAY - the http URL of the prometheus pushgateway into which the metrics will be pushed.  defaults to http://crunchy-scope:9091

=== Example
An example of using crunchy-collect is stored in examples/openshift/master-collect.json

This example collects metrics for the pg-master database.  Run the
example as follows:
....
oc process -f master-collect.json | oc create -f -
....

== Connection Metrics

[format="csv", options="header"]
|===
Metric,Description,Scope,Unit
crunchy_connections,the number of active connections,database/cluster,count

== Connection Utilization Metrics

[format="csv", options="header"]
|===
Metric,Description,Scope
connection_util,the percent utilization of max connections,per cluster

== Database Size Metrics

[format="csv", options="header"]
|===
Metric,Description,Scope
tablesize-top10,the top 10 tables in terms of number of pages,per table
databasesize,the size in Megabytes of a database,per database

== pg_stat_database Metrics

[format="csv", options="header"]
|===
Metric,Description,Scope
xact_commit, Number of transactions in this database that have been committed , per database
xact_rollback, Number of transactions in this database that have been rolled back, per database

== bgwriter Metrics

[format="csv", options="header"]
|===
Metric,Description,Scope
bgwriter, alloc_mbps checkpoint_mbps clean_mbps backend_mbps write_mbps, per cluster

== Table Size Metrics

[format="csv", options="header"]
|===
Metric,Description,Scope
tablesize-top10,the top 10 tables in terms of number of pages,per table

== Dead Rows Metrics

[format="csv", options="header"]
|===
Metric,Description,Scope

== Lock Metrics

[format="csv", options="header"]
|===
Metric,Description,Scope
locks_db, locks held for a database, per database

== pg_xlog Metrics

[format="csv", options="header"]
|===
Metric,Description,Scope

blks_read, Number of disk blocks read in this database, per database
blks_hit,Number of times disk blocks were found already in the buffer cache so that a read was not necessary (this only includes hits in the PostgreSQL buffer cache not the operating system's file system cache), per database
tup_returned, Number of rows returned by queries in this database, per database
tup_fetched, Number of rows fetched by queries in this database, per database
tup_inserted, Number of rows inserted by queries in this database, per database
tup_updated, Number of rows updated by queries in this database, per database
tup_deleted, Number of rows deleted by queries in this database, per database
temp_files, Number of temporary files created by queries in this database, per database
temp_bytes, Number of temporary files in bytes created by queries in this database, per database
deadlocks, Number of deadlocks detected in this database, per database
blk_read_time, Time spent reading data file blocks by backends in this database in milliseconds, per database
blk_write_time, Time spent writing data file blocks by backends in this database in milliseconds, per database
index_hit_ratio, index hit ratio, per table
heap_hit_ratio, heap hit ratio, per database

disk_usage_db, disk usage in megabytes for a database, per database

|===

== Legal Notices

Copyright Â© 2016 Crunchy Data Solutions, Inc.

CRUNCHY DATA SOLUTIONS, INC. PROVIDES THIS GUIDE "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.

Crunchy, Crunchy Data Solutions, Inc. and the Crunchy Hippo Logo are trademarks of Crunchy Data Solutions, Inc.

